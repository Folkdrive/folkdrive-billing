# Generated by Django 5.2.7 on 2025-10-11 13:27

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_name", models.CharField(max_length=255)),
                ("contact_name", models.CharField(max_length=255)),
                ("mobile_number", models.CharField(max_length=15)),
                ("email", models.EmailField(max_length=254)),
                ("gst_number", models.CharField(max_length=15, unique=True)),
                ("address", models.TextField()),
                ("branch_location", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "fd_customer",
            },
        ),
        migrations.CreateModel(
            name="EmailConfiguration",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                (
                    "days_after_invoice",
                    models.IntegerField(
                        help_text="Days after invoice creation to send reminder"
                    ),
                ),
                (
                    "reminder_frequency",
                    models.IntegerField(
                        help_text="Frequency in days between reminders"
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "max_reminders",
                    models.IntegerField(
                        default=5, help_text="Maximum number of reminders to send"
                    ),
                ),
            ],
            options={
                "db_table": "fd_email_config",
            },
        ),
        migrations.CreateModel(
            name="EmailLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("recipient", models.EmailField(max_length=254)),
                ("subject", models.CharField(max_length=255)),
                ("body", models.TextField()),
                ("sent_at", models.DateTimeField(auto_now_add=True)),
                ("status", models.CharField(default="sent", max_length=20)),
                ("error_message", models.TextField(blank=True)),
            ],
            options={
                "db_table": "fd_email_log",
            },
        ),
        migrations.CreateModel(
            name="TermsAndConditions",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField(max_length=50, unique=True)),
                ("title", models.CharField(max_length=255)),
                ("content", models.TextField()),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "db_table": "fd_terms_conditions",
            },
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("invoice_number", models.CharField(max_length=50, unique=True)),
                ("invoice_date", models.DateField(auto_now_add=True)),
                ("due_date", models.DateField()),
                ("subtotal", models.DecimalField(decimal_places=2, max_digits=15)),
                ("tax_amount", models.DecimalField(decimal_places=2, max_digits=15)),
                ("total_amount", models.DecimalField(decimal_places=2, max_digits=15)),
                (
                    "amount_paid",
                    models.DecimalField(decimal_places=2, default=0, max_digits=15),
                ),
                ("balance_due", models.DecimalField(decimal_places=2, max_digits=15)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("sent", "Sent"),
                            ("paid", "Paid"),
                            ("overdue", "Overdue"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("terms_and_conditions", models.TextField()),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="FD.customer"
                    ),
                ),
            ],
            options={
                "db_table": "fd_invoice",
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("payment_date", models.DateField()),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("bank_transfer", "Bank Transfer"),
                            ("credit_card", "Credit Card"),
                            ("debit_card", "Debit Card"),
                            ("upi", "UPI"),
                            ("cash", "Cash"),
                            ("cheque", "Cheque"),
                        ],
                        max_length=20,
                    ),
                ),
                ("reference_number", models.CharField(blank=True, max_length=100)),
                ("notes", models.TextField(blank=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="payments",
                        to="FD.invoice",
                    ),
                ),
            ],
            options={
                "db_table": "fd_payment",
            },
        ),
        migrations.CreateModel(
            name="PaymentReminderLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("sent_date", models.DateTimeField(auto_now_add=True)),
                ("reminder_number", models.IntegerField()),
                ("status", models.CharField(default="sent", max_length=20)),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="FD.invoice"
                    ),
                ),
            ],
            options={
                "db_table": "fd_payment_reminder_log",
            },
        ),
        migrations.CreateModel(
            name="WorkOrder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("work_order_number", models.CharField(max_length=50, unique=True)),
                ("project_title", models.CharField(max_length=255)),
                ("project_description", models.TextField()),
                (
                    "estimated_hours",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "hourly_rate",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                (
                    "total_cost",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=15,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                ("start_date", models.DateField()),
                ("end_date", models.DateField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("confirmed", "Confirmed"),
                            ("in_progress", "In Progress"),
                            ("completed", "Completed"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="draft",
                        max_length=20,
                    ),
                ),
                ("terms_and_conditions", models.TextField()),
                ("created_by", models.CharField(max_length=255)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="FD.customer"
                    ),
                ),
            ],
            options={
                "db_table": "fd_work_order",
            },
        ),
        migrations.AddField(
            model_name="invoice",
            name="work_order",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE, to="FD.workorder"
            ),
        ),
    ]
